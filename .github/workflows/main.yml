name: Main CI

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

jobs:
  quality:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pre-commit
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy

      - name: Install dependencies
        run: |
          uv venv
          uv pip install pip
          uv pip install maturin
          uv sync

      - name: Build Rust extension with maturin
        run: |
          source .venv/bin/activate
          maturin develop -m py-ih-muse/Cargo.toml

      - name: Run code quality checks
        run: |
          source .venv/bin/activate
          make check

      - name: Run Rust formatting check
        run: cargo fmt --all -- --check

      - name: Run Rust linter with clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

  tests-and-type-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        rust-version: ["stable"]
        exclude:
          - os: windows-latest
            python-version: "3.13"
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        if: runner.os != 'Windows'

      - name: Install uv (Windows)
        run: |
          iwr https://astral.sh/uv/install.ps1 -useb | iex
        if: runner.os == 'Windows'

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          uv venv
          uv pip install pip
          uv pip install maturin
          uv sync
        shell: bash

      - name: Build and install the package with maturin
        run: |
          source .venv/bin/activate
          maturin develop -m py-ih-muse/Cargo.toml
        if: runner.os != 'Windows'

      - name: Build and install the package with maturin (Windows)
        run: |
          .venv\Scripts\activate
          maturin develop -m py-ih-muse/Cargo.toml
        if: runner.os == 'Windows'

      - name: Run Python tests with coverage
        run: |
          source .venv/bin/activate
          pytest tests --cov=ih_muse --cov-report=xml
        if: runner.os != 'Windows'

      - name: Run Python tests with coverage (Windows)
        run: |
          .venv\Scripts\activate
          pytest tests --cov=ih_muse --cov-report=xml
        if: runner.os == 'Windows'

      - name: Run typing checks with mypy
        run: |
          source .venv/bin/activate
          mypy py-ih-muse
        if: ${{ matrix.python-version != '3.12' && runner.os != 'Windows' }}

      - name: Run typing checks with mypy (Windows)
        run: |
          .venv\Scripts\activate
          mypy py-ih-muse
        if: ${{ matrix.python-version != '3.12' && runner.os == 'Windows' }}

      - name: Upload coverage reports to Codecov (Python 3.11 on Ubuntu only)
        uses: codecov/codecov-action@v4
        if: ${{ matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest' }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: |
          uv venv
          uv pip install pip
          uv pip install maturin
          uv sync

      - name: Build Rust extension with maturin
        run: |
          source .venv/bin/activate
          maturin develop -m py-ih-muse/Cargo.toml

      - name: Validate documentation build
        run: |
          source .venv/bin/activate
          mkdocs build -s
