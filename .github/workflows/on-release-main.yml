name: Release

on:
  release:
    types: [published]
    branches: [main]

jobs:
  set-version:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: vars
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Update Python package version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ env.RELEASE_VERSION }}\"/" py-ih-muse/pyproject.toml

      - name: Update Rust package versions
        run: cargo set-version ${{ env.RELEASE_VERSION }} --manifest-path crates/ih-muse-core/Cargo.toml

      - name: Commit version changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git commit -am "Release ${{ env.RELEASE_VERSION }}"
          git push

  publish-python:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: "3.11"
          rust-version: "stable"

      - name: Build Python package
        run: uv run maturin build --release -m py-ih-muse/Cargo.toml

      - name: Publish to PyPI
        run: uv run twine upload target/wheels/*.whl
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  publish-rust:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: "stable"

      - name: Publish ih-muse-core to crates.io
        run: |
          cd crates/ih-muse-core
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  check-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Set up virtual environment and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          python -m ensurepip --upgrade
          python -m pip install --upgrade pip
          python -m pip install maturin
          python -m pip install uv
          uv sync --all

      - name: Build Rust extension with maturin
        run: |
          source .venv/bin/activate
          maturin develop -m py-ih-muse/Cargo.toml

      - name: Validate documentation build
        run: |
          source .venv/bin/activate
          # Install the package in editable mode if necessary
          python -m pip install -e ./py-ih-muse
          # Build the documentation using Sphinx
          python -m sphinx -b html docs/ docs/_build/html
