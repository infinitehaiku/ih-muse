name: Release

on:
  push:
    branches:
      - main

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important for version detection

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python versioning tools
        run: |
          pip install setuptools-scm

      - name: Detect new version
        id: version
        run: |
          # Use setuptools-scm to derive the version
          version=$(python -m setuptools_scm)
          echo "version=$version" >> $GITHUB_OUTPUT
          echo "Detected version: $version"

      - name: Update Python package version
        run: |
          sed -i "s/^version = \".*\"/version = \"${{ steps.version.outputs.version }}\"/" py-ih-muse/pyproject.toml

      - name: Update Rust package versions
        run: cargo set-version ${{ steps.version.outputs.version }} --manifest-path crates/ih-muse-core/Cargo.toml

      - name: Commit version changes
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add py-ih-muse/pyproject.toml crates/ih-muse-core/Cargo.toml
          git commit -m "Bump version to ${{ steps.version.outputs.version }}"
          git push

  publish-python:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up the environment
        uses: ./.github/actions/setup-python-env
        with:
          python-version: "3.11"
          rust-version: "stable"

      - name: Build Python package
        run: uv run maturin build --release -m py-ih-muse/Cargo.toml

      - name: Publish to PyPI
        run: uv run twine upload target/wheels/*.whl
        env:
          TWINE_USERNAME: "__token__"
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  publish-rust:
    needs: set-version
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions/setup-rust@v1
        with:
          rust-version: "stable"

      - name: Publish ih-muse-core to crates.io
        run: |
          cd crates/ih-muse-core
          cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  create-github-release:
    needs: [set-version, publish-python, publish-rust]
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ needs.set-version.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
