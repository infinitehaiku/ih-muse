name: Release

on:
  push:
    branches:
      - main
    paths:
      - "crates/**"
      - "docs/**"
      - "py-ih-muse/**"
      - "Cargo.toml"

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  rust-release:
    name: Rust Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      release_created: ${{ steps.release-drafter.outputs.release_created }}
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from Cargo.toml
        id: version
        run: |
          VERSION=$(grep '^version = ' Cargo.toml | head -n 1 | cut -d '"' -f 2)
          echo "Detected version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Release Drafter
        id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter.yml

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Publish IH-Muse package
        run: |
          cd crates
          cargo publish --allow-dirty -p ih-muse-proto --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --allow-dirty -p ih-muse-core --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --allow-dirty -p ih-muse-record --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --allow-dirty -p ih-muse-client --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --allow-dirty -p ih-muse --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          cargo publish --allow-dirty -p ih-muse-cli --token ${{ secrets.CARGO_REGISTRY_TOKEN }}

  python-release:
    name: Python Release
    needs: rust-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # TODO: windows not supported yet (tests failing)
        os: [ubuntu-latest, macos-latest]
    environment:
      name: pypi
      url: https://pypi.org/project/ih-muse/
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install cibuildwheel
        run: pip install cibuildwheel==2.14.1

      - name: Build and publish wheels
        env:
          CIBW_BEFORE_ALL: "pip install maturin"
          CIBW_BUILD: "cp3?-*"
          CIBW_BUILD_FRONTEND: "build"
          CIBW_ENVIRONMENT: |
            MATHURIN_BUILD_EXTRA_ARGS="--cargo-extra-args='--features pyo3/extension-module'"
        run: |
          cibuildwheel py-ih-muse --output-dir dist

      - name: Upload to PyPI
        if: needs.rust-release.outputs.release_created == 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          password: ${{ secrets.PYPI_API_TOKEN }}
          verify-metadata: false

      - name: Upload to TestPyPI
        if: needs.rust-release.outputs.release_created != 'true'
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/
          repository-url: https://test.pypi.org/legacy/
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          verify-metadata: false

  update-changelog:
    name: Update Changelog
    needs: rust-release
    runs-on: ubuntu-latest
    if: needs.rust-release.outputs.release_created == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          latest-version: ${{ needs.rust-release.outputs.version }}
          release-notes: ${{ needs.rust-release.outputs.body }}

      - name: Commit updated Changelog
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: "docs(changelog): update changelog"
          file_pattern: CHANGELOG.md

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            CHANGELOG.md
          generate_release_notes: true
