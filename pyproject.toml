[tool.uv]
managed = true
package = false

[tool.uv.workspace]
members = ["py-ih-muse"]

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "pre-commit>=2.20.0",
    "tox-uv>=1.11.3",
    # "deptry>=0.20.0",
    # "deptry>=0.991",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.6.9",
    "maturin>=1.7.4",
    "mypy>=1.13.0",
]
docs = [
    "sphinx>=7.0",
    "sphinx-autodoc2>=0.5.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.5.0",
    "sphinx-inline-tabs>=2023.4.21",
    "myst-parser>=2",
    "furo>=2023",
]

[tool.mypy]
files = ["py-ih-muse/ih_muse", "tests"]
strict = true
enable_error_code = [
  "redundant-expr",
  "truthy-bool",
  "ignore-without-code",
]
disable_error_code = [
  "empty-body",
]
follow_imports = "silent"
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_incomplete_defs = true
pretty = true
allow_redefinition = true
strict_equality = true


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 88
fix = true

[tool.ruff.lint]
select = [
  "ANN", # flake8-annotations
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "E", # pycodestyle
  "EM", # flake8-errmsg
  "F", # pyflakes
  "FA", # flake8-future-annotations
  "FBT001", # flake8-boolean-trap
  "I", # isort
  "ICN", # flake8-import-conventions
  "INT", # flake8-gettext
  "PERF", # perflint
  "PIE", # flake8-pie
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W", # pycodestyle
]
per-file-ignores = { "tests/*" = ["S101"] }
ignore = [
    "D203",  # Ignore one-blank-line-before-class
    "D213"   # Ignore multi-line-summary-second-line
]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["ih_muse"]
