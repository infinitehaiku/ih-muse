[project]
name = "ih-muse-workspace"
version = "0.1.0"
description = "Common muse library for python"
authors = [{ name = "Luis Diaz", email = "code.luis.diaz@proton.me" }]
requires-python = ">=3.9,<4.0"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["dummy"]

[tool.uv]
managed = true
dev-dependencies = [
    "pytest>=7.4.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "maturin>=1.7.2",
    "pre-commit>=2.20.0",
    "mypy>=1.7.0",
    "deptry>=0.20.0",
    "twine",
    "tox-uv>=1.11.3",
    "ruff>=0.6.9",
    "mkdocs>=1.4.2",
    "mkdocs-material>=8.5.10",
    "mkdocstrings[python]>=0.26.1",
    "pymdown-extensions>=10.12",
]

[tool.uv.workspace]
members = ["py-ih-muse"]

[tool.mypy]
files = ["py-ih-muse/ih_muse"]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true
warn_unused_configs = true
ignore_missing_imports = true
disallow_incomplete_defs = true
exclude = 'venv,env'
pretty = true
allow_redefinition = true
strict_equality = true


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.ruff]
line-length = 88
fix = true

[tool.ruff.lint]
select = [
  "ANN", # flake8-annotations
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "D", # flake8-docstrings
  "E", # pycodestyle
  "EM", # flake8-errmsg
  "F", # pyflakes
  "FA", # flake8-future-annotations
  "FBT001", # flake8-boolean-trap
  "I", # isort
  "ICN", # flake8-import-conventions
  "INT", # flake8-gettext
  "PERF", # perflint
  "PIE", # flake8-pie
  "PT", # flake8-pytest-style
  "PTH", # flake8-use-pathlib
  "PYI", # flake8-pyi
  "RUF", # ruff-specific rules
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TD", # flake8-todos
  "TID", # flake8-tidy-imports
  "TRY", # tryceratops
  "UP", # pyupgrade
  "W", # pycodestyle
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["ih_muse"]
